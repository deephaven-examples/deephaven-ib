name: Build Whl

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  build:
    name: Build Whl
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@master
    - name: Setup Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade setuptools wheel build twine
    - name: Set output version
      id: version
      run: |
        TAG_NAME=${{ github.event.release.tag_name }}
        if [ -z "${TAG_NAME}" ]
        then
            PR_NUMBER=$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')
            echo "::set-output name=version::pr${PR_NUMBER}"
        else
            echo "::set-output name=version::${{ github.event.release.tag_name }}"
        fi
    - name: Build
      env:
        DH_IB_VERSION: ${{ steps.version.outputs.version }}
      run: |
        python -m build
    - name: Archive production artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-artifacts
        path: |
          dist/*

  sphinx:
    name: Sphinx
    runs-on: ubuntu-20.04
    needs: [build]
    steps:
    - uses: actions/checkout@v1
    - name: Apt installs
      run: |
        sudo apt update
        sudo apt install -y openjdk-11-jdk
    - name: Pip installs
      run:  pip3 install --upgrade sphinx sphinx-autodoc-typehints furo==2022.4.7
    - name: Download Artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-artifacts
    - name: Install Whl
      run: pip3 install *.whl
    - name: DEBUG JAVA_HOME
      run: sudo find / -name java
    - name: Run Sphinx
      working-directory: ./sphinx
      env:
        JAVA_HOME: /usr/lib/jvm/java-11-openjdk-amd64
      run: |
        env
        find $JAVA_HOME
        $JAVA_HOME/bin/java -version
        pip3 show furo
        pip3 show pygments
        make html
        touch build/html/.nojekyll


#  publish:
#    name: Publish Whl
#    runs-on: ubuntu-20.04
#    needs: [build]
#      #TODO: publish
##    - name: Publish
##      if: xxxx
##      python -m twine upload --repository testpypi dist/*

        



#name: Build Whl
#
#on:
#  pull_request:
#    branches:
#      - main
#  push:
#    branches:
#      - main
#
#jobs:
#  build-and-publish:
#    name: Build Whl
#    runs-on: ubuntu-20.04
#    steps:
#    - uses: actions/checkout@master
#    - name: Setup Python
#      uses: actions/setup-python@v1
#      with:
#        python-version: 3.7
#    - name: Install dependencies
#      run: |
#        python -m pip install --upgrade pip
#        python -m pip install --upgrade setuptools wheel build twine
#    - name: Set output version
#      id: version
#      run: |
#        TAG_NAME=${{ github.event.release.tag_name }}
#        if [ -z "${TAG_NAME}" ]
#        then
#            PR_NUMBER=$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')
#            echo "::set-output name=version::pr${PR_NUMBER}"
#        else
#            echo "::set-output name=version::${{ github.event.release.tag_name }}"
#        fi
#    - name: Build
#      env:
#        DH_IB_VERSION: ${{ steps.version.outputs.version }}
#      run: |
#        python -m build
#    - name: Archive production artifacts
#      uses: actions/upload-artifact@v2
#      with:
#        name: build-artifacts
#        path: |
#          dist/*
##TODO: publish
##    - name: Publish
##      if: xxxx
##      python -m twine upload --repository testpypi dist/*
#
#
